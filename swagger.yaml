openapi: 3.0.0
info:
  title: API de Notas
  version: 1.0.0
  description: API para gestionar notas con recordatorios
  contact:
    name: Soporte API
    email: soporte@api-notas.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3000
    description: Servidor de desarrollo

tags:
  - name: Notas
    description: API para gestionar notas
  - name: Usuarios
    description: API para gestionar usuarios y autenticación

components:
  schemas:
    Nota:
      type: object
      required:
        - nota
        - categoria
        - autor
      properties:
        _id:
          type: string
          description: ID único de la nota
        nota:
          type: string
          description: Contenido de la nota
        categoria:
          type: string
          description: Categoría de la nota
        etiquetas:
          type: array
          items:
            type: string
          description: Etiquetas asociadas a la nota
        color:
          type: string
          description: Color de la nota en formato hexadecimal
        autor:
          type: string
          description: Autor de la nota
        recordatorio:
          type: object
          properties:
            fecha:
              type: string
              format: date-time
              description: Fecha del recordatorio
            hora:
              type: string
              description: Hora del recordatorio en formato HH:MM
            activo:
              type: boolean
              description: Indica si el recordatorio está activo
        estado:
          type: string
          enum: [pendiente, en_progreso, completada, archivada]
          description: Estado actual de la nota
        prioridad:
          type: string
          enum: [baja, media, alta, urgente]
          description: Nivel de prioridad de la nota
        fechaVencimiento:
          type: string
          format: date-time
          description: Fecha de vencimiento de la nota
        adjuntos:
          type: array
          items:
            type: string
          description: URLs de archivos adjuntos a la nota
        colaboradores:
          type: array
          items:
            type: string
          description: Lista de colaboradores de la nota
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación de la nota
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización de la nota
    Usuario:
      type: object
      required:
        - nombre
        - email
        - password
      properties:
        _id:
          type: string
          description: UUID único del usuario
        nombre:
          type: string
          description: Nombre del usuario
        email:
          type: string
          description: Email del usuario (único)
        password:
          type: string
          description: Contraseña del usuario (mínimo 6 caracteres)
        rol:
          type: string
          enum: [usuario, admin]
          description: Rol del usuario
        activo:
          type: boolean
          description: Estado del usuario
        ultimoAcceso:
          type: string
          format: date-time
          description: Fecha del último acceso
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización
    Error:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de error
        requestId:
          type: string
          description: ID de la petición para seguimiento
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /api/notes:
    get:
      summary: Obtener todas las notas
      description: Retorna una lista de todas las notas disponibles
      tags: [Notas]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Lista de notas obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Nota'
        401:
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Crear una nueva nota
      description: Crea una nueva nota con los datos proporcionados
      tags: [Notas]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Nota'
      responses:
        201:
          description: Nota creada correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nota'
        400:
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/notes/{id}:
    get:
      summary: Obtener una nota por ID
      description: Retorna una nota específica según su ID
      tags: [Notas]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID de la nota
      responses:
        200:
          description: Nota obtenida correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nota'
        401:
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Nota no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Actualizar una nota
      description: Actualiza una nota existente según su ID
      tags: [Notas]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID de la nota
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Nota'
      responses:
        200:
          description: Nota actualizada correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nota'
        401:
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Nota no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        400:
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Eliminar una nota
      description: Elimina una nota existente según su ID
      tags: [Notas]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID de la nota
      responses:
        200:
          description: Nota eliminada correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Nota eliminada correctamente
        401:
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Nota no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/users:
    post:
      summary: Registrar un nuevo usuario
      description: Crea un nuevo usuario en el sistema
      tags: [Usuarios]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nombre
                - email
                - password
              properties:
                nombre:
                  type: string
                email:
                  type: string
                password:
                  type: string
                rol:
                  type: string
                  enum: [usuario, admin]
      responses:
        201:
          description: Usuario registrado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  nombre:
                    type: string
                  email:
                    type: string
                  rol:
                    type: string
                  token:
                    type: string
        400:
          description: Datos inválidos o usuario ya existe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: Obtener todos los usuarios
      description: Retorna una lista de todos los usuarios (solo admin)
      tags: [Usuarios]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Lista de usuarios obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
        401:
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: No autorizado como administrador
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/users/login:
    post:
      summary: Iniciar sesión
      description: Autentica un usuario y devuelve un token JWT
      tags: [Usuarios]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Usuario autenticado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  nombre:
                    type: string
                  email:
                    type: string
                  rol:
                    type: string
                  token:
                    type: string
        401:
          description: Credenciales inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/users/perfil:
    get:
      summary: Obtener perfil de usuario
      description: Retorna el perfil del usuario autenticado
      tags: [Usuarios]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Perfil obtenido correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        401:
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Actualizar perfil de usuario
      description: Actualiza el perfil del usuario autenticado
      tags: [Usuarios]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Perfil actualizado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  nombre:
                    type: string
                  email:
                    type: string
                  rol:
                    type: string
                  token:
                    type: string
        401:
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/users/{id}:
    delete:
      summary: Eliminar usuario
      description: Elimina un usuario por su ID (solo admin)
      tags: [Usuarios]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID del usuario
      responses:
        200:
          description: Usuario eliminado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Usuario eliminado
        401:
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: No autorizado como administrador
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

